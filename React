组件基础：
React事件机制
React事件和普通的HTML事件有什么不同？
React组件中怎么做事件代理，它的原理是什么？
React高阶组件，Render Props，hooks有什么区别？为什么要不断迭代？
对React-fiber的理解，它解决了什么问题？
React.Component和React.PureComponent的区别？
Component,Element,instance之间有什么区别和联系？
React.createdClass和extends Component的区别有哪些？
React高阶组件是什么，和普通组件有什么区别，适用什么场景？
对ComponentWillReceiveProps的理解。
哪些方法会触发react重新渲染。重新渲染render会做些什么？


数据管理





生命周期
1.React生命周期有哪些？
React通常将组件生命周期分为三个阶段：
装载阶段(Mount),组件第一次在DOM树中被渲染的过程；
更新过程(Update），组件状态发生变化，重新更新渲染的过程；
卸载过程(Unmount)，组件从DOM树中被移除的过程；

挂载时：constructor构造函数----->getDerivedStateFromProps(从props获得衍生的状态
（props是组件的输入，它们是单个值或包含一组值的对象，这些值在创建时使用类似于HTML
标记属性的命名约定传递给组件。它们是从父组件传递给子组件的数组））---->渲染render,react
更新DOM和refs----->组件做了挂载。

更新时：new props--->getDerivedStateFromProps（从Props获得衍生状态）---->shouldComponentUpdate（应该做组件更新）
------>渲染render------>在更新之前获得快照（getSnapshotBoforeUpdate------->React更新
Dom和Refs）----->组件做了更新componentDidUpdate


卸载时：组件做了卸载componentDidUnmounted

Render阶段:纯净且不包含副作用。可能会被React暂停中止或重新启动。
Pre-commit预提交阶段:可以读取DOM
Commit阶段：可以使用DOM，运行副作用，安排更新。


1）组件挂载阶段：
挂载阶段组件被创建，然后组件实例插入到DOM中，完成组件的第一次渲染，该过程只会发生一次，
在此阶段会依次调用以下这些方法：
constructor
getDerivedStateFromProps
render
componentDidMounted
(1)constructor
组件的构造函数，第一个被执行，若没有显式定义它，它会有一个默认的构造函数，但是若显式定义了构造函数
，我们必须在构造函数中执行super（props）,否则无法在构造函数中拿到this

如果不初始化state或不进行方法绑定，则不需要为React组件实现构造函数Constructor.
constructor中通常只做两件事:
初始化组件的state
给事件处理方法绑定this
constructor(props){
super(props);
//不要在构造函数中调用setState，可以直接给state设置初始值
this.state = {counter:0}
this.handClick = this.handleClick.bind(this）
}
（2）getDerivedStateProps
static getDerivedStateProps(props,state)
这是一个静态方法，所以不能在这个函数里使用

z



组件通信




其他


路由


Redux



Hooks



虚拟Dom

